/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
      int down_nodes(TreeNode* root){
        if(!root)
        return 0;

        return 1+down_nodes(root->left)+down_nodes(root->right);
    } 
    int solve(TreeNode* root,int &ans){
        if(!root)return 0;

        int sum = 0;
        sum+=solve(root->left,ans);
        sum+=solve(root->right,ans);

        int height = down_nodes(root);

        sum += root->val;

        if(sum / height == root->val)ans++;

        return sum;
    }
public:
    int averageOfSubtree(TreeNode* root) {
           if(!root)return 0;
           int ans = 0;
            solve(root,ans);
            return ans;

    }
};
